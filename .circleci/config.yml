version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.2.0
  aws-ecs: circleci/aws-ecs@1.2.0
  aws-cli: circleci/aws-cli@0.1.16
jobs:
  build:
    docker:
      - image: circleci/ruby:2.7.1-node-browsers-legacy
        environment:
          RAILS_ENV: test
          DATABASE_HOST: '127.0.0.1'
      - image: circleci/mysql:5.7.30
#    image: circleci/classic:edge
    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - gem-cache-v1-{{ checksum "~/repo/backend/Gemfile.lock" }}
            - gem-cache-v1-

      - run:
          name: Install bundler
          command: gem install bundler -v 2.2.15
          working_directory: backend
      - run:
          name: Which bundler?
          command: bundle -v
          working_directory: backend

      - run:
          command: |
            gem install bundler
            bundle config set path 'vendor/bundle'
            bundle install --jobs=4 --retry=3
          working_directory: ~/repo/backend

      - save_cache:
          key: gem-cache-v1-{{ checksum "~/repo/backend/Gemfile.lock" }}
          paths:
            - ~/repo/backend/vendor/bundle


      # Database setup
      - run:
          command: bundle exec rails db:create
          working_directory: ~/repo/backend
      - run:
          command: bundle exec rails db:migrate
          working_directory: ~/repo/backend

      - run:
          name: create directory to store test results
          command: mkdir /tmp/test-results
          working_directory: ~/repo/backend

      # run tests
      - run:
          name: RSpec
          command: |
            bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings) \
              || (printf "====== RETRYING...\n\n\n"; bundle exec rspec --only-failures)
          working_directory: ~/repo/backend

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: /home/circleci/repo/tmp/screenshots

  test_frontend:
    docker:
      - image: circleci/node:15.10
        environment:
          NODE_ENV: test

    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "~/repo/frontend/package.json" }}

      - run:
          name: install-packages
          command: yarn install
          working_directory: ~/repo/frontend
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "~/repo/frontend/package.json" }}

      - run:
          name: test
          command: yarn run test
          working_directory: ~/repo/frontend

build_and_push_image_frontend:
  machine:
    image: ubuntu-1604:201903-01
  steps:
    - checkout
    - aws-ecr/build-and-push-image:
        account-url: AWS_ACCOUNT_URL
        repo: "rr-frontend"
        region: AWS_REGION
        tag: "${CIRCLE_SHA1}"
        path: ./frontend/


workflows:
  version: 2
  test:
    jobs:
      - test_backend:
          filters:
            branches:
              ignore: master
      - test_frontend:
          filters:
            branches:
              ignore: master
      - build_and_push_image_backend:
          requires:
           - test_frontend
           - test_backend
        filters:
          branches:
            only: master
      - build_and_push_image_frontend:
          requires:
            - test_frontend
            - test_backend
          filters:
            branches:
              only: master